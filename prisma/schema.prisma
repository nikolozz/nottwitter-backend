model Comment {
  id       Int    @id @default(autoincrement())
  content  String
  author   User   @relation(fields: [authorId], references: [id])
  authorId Int
  tweet    Tweet  @relation(fields: [tweetId], references: [id])
  tweetId  Int
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
model File {
  id   Int    @id @default(autoincrement())
  key  String
  url  String
  user User?  
}
model Like {
  id      Int      @id @default(autoincrement())
  likedAt DateTime @default(now())
  tweet   Tweet    @relation(fields: [tweetId], references: [id])
  tweetId Int
  owner   User     @relation(fields: [ownerId], references: [id])
  ownerId Int
}
model Tweet {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  username  String    @unique
  password  String
  role      Role?
  avatar    File?     @relation(fields: [avatarId], references: [id])
  avatarId  Int?
  tweets    Tweet[]
  likes     Like[]
  comments  Comment[]
  bio       String?
  location  String?
  website   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

enum Role {
  ADMIN
  USER
}
